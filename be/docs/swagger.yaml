definitions:
  model.RegistrationInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  model.RegistrationOrSigninResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/model.UserResponse'
    type: object
  model.SigninInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: A simple file Upload CRUD API using Gin.
  title: Simple File Upload Go OpenAPI
  version: "1.0"
paths:
  /api/v1/search:
    get:
      description: search in file
      parameters:
      - description: search by word
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Search context for give word
  /api/v1/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      operationId: file.upload
      parameters:
      - description: sample test text file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Upload A Text File to Storage
  /api/v1/uploads:
    get:
      description: Uploaded files
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: List of all Uploaded files into Storage
  /register:
    post:
      consumes:
      - application/json
      description: allows new user to register in system
      parameters:
      - description: New user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegistrationInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.RegistrationOrSigninResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: new user registration to the system
      tags:
      - auth
  /signin:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Signing in credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/model.SigninInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RegistrationOrSigninResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Signin a user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
